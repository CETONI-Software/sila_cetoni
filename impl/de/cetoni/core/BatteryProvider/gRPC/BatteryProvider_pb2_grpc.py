# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import BatteryProvider_pb2 as BatteryProvider__pb2


class BatteryProviderStub(object):
    """Feature: Battery Provider
    Provides information on the battery state
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Subscribe_BatteryVoltage = channel.unary_stream(
                '/sila2.de.cetoni.core.batteryprovider.v1.BatteryProvider/Subscribe_BatteryVoltage',
                request_serializer=BatteryProvider__pb2.Subscribe_BatteryVoltage_Parameters.SerializeToString,
                response_deserializer=BatteryProvider__pb2.Subscribe_BatteryVoltage_Responses.FromString,
                )


class BatteryProviderServicer(object):
    """Feature: Battery Provider
    Provides information on the battery state
    """

    def Subscribe_BatteryVoltage(self, request, context):
        """Battery Voltage
        The current voltage of the battery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BatteryProviderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Subscribe_BatteryVoltage': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_BatteryVoltage,
                    request_deserializer=BatteryProvider__pb2.Subscribe_BatteryVoltage_Parameters.FromString,
                    response_serializer=BatteryProvider__pb2.Subscribe_BatteryVoltage_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.cetoni.core.batteryprovider.v1.BatteryProvider', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BatteryProvider(object):
    """Feature: Battery Provider
    Provides information on the battery state
    """

    @staticmethod
    def Subscribe_BatteryVoltage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.core.batteryprovider.v1.BatteryProvider/Subscribe_BatteryVoltage',
            BatteryProvider__pb2.Subscribe_BatteryVoltage_Parameters.SerializeToString,
            BatteryProvider__pb2.Subscribe_BatteryVoltage_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
