# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ChannelGatewayService_pb2 as ChannelGatewayService__pb2


class ChannelGatewayServiceStub(object):
    """Feature: Channel Gateway Service
    This feature provides generic gateway functionality for other Features that operate on devices with channels.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChannelIdentifiers = channel.unary_unary(
                '/sila2.de.cetoni.core.channelgatewayservice.v1.ChannelGatewayService/GetChannelIdentifiers',
                request_serializer=ChannelGatewayService__pb2.GetChannelIdentifiers_Parameters.SerializeToString,
                response_deserializer=ChannelGatewayService__pb2.GetChannelIdentifiers_Responses.FromString,
                )
        self.Get_FCPAffectedByMetadata_ChannelIdentifier = channel.unary_unary(
                '/sila2.de.cetoni.core.channelgatewayservice.v1.ChannelGatewayService/Get_FCPAffectedByMetadata_ChannelIdentifier',
                request_serializer=ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Parameters.SerializeToString,
                response_deserializer=ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Responses.FromString,
                )


class ChannelGatewayServiceServicer(object):
    """Feature: Channel Gateway Service
    This feature provides generic gateway functionality for other Features that operate on devices with channels.
    """

    def GetChannelIdentifiers(self, request, context):
        """Get Channel Identifiers
        Get all possible channel names (identifiers) that the given Feature can use.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_FCPAffectedByMetadata_ChannelIdentifier(self, request, context):
        """Channel Identifier
        The name (identifier) of the channel that should be used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChannelGatewayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChannelIdentifiers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelIdentifiers,
                    request_deserializer=ChannelGatewayService__pb2.GetChannelIdentifiers_Parameters.FromString,
                    response_serializer=ChannelGatewayService__pb2.GetChannelIdentifiers_Responses.SerializeToString,
            ),
            'Get_FCPAffectedByMetadata_ChannelIdentifier': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_FCPAffectedByMetadata_ChannelIdentifier,
                    request_deserializer=ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Parameters.FromString,
                    response_serializer=ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.cetoni.core.channelgatewayservice.v1.ChannelGatewayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChannelGatewayService(object):
    """Feature: Channel Gateway Service
    This feature provides generic gateway functionality for other Features that operate on devices with channels.
    """

    @staticmethod
    def GetChannelIdentifiers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.core.channelgatewayservice.v1.ChannelGatewayService/GetChannelIdentifiers',
            ChannelGatewayService__pb2.GetChannelIdentifiers_Parameters.SerializeToString,
            ChannelGatewayService__pb2.GetChannelIdentifiers_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_FCPAffectedByMetadata_ChannelIdentifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.core.channelgatewayservice.v1.ChannelGatewayService/Get_FCPAffectedByMetadata_ChannelIdentifier',
            ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Parameters.SerializeToString,
            ChannelGatewayService__pb2.Get_FCPAffectedByMetadata_ChannelIdentifier_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
