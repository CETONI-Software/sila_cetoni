"""
________________________________________________________________________

:PROJECT: sila_cetoni

*Pump Drive Control Service_defined_errors*

:details: PumpDriveControlService Defined SiLA Error factories:
    Functionality to control and maintain the drive that drives the pump.
    Allows to initialize a pump (e.g. by executing a reference move) and obtain status information about the pump
    drive's current state (i.e. enabled/disabled).
    The initialization has to be successful in order for the pump to work correctly and dose fluids. If the
    initialization fails, the DefinedExecutionError InitializationFailed is thrown.

:file:    PumpDriveControlService_defined_errors.py
:authors: Florian Meinicke

:date: (creation)          2021-07-11T07:37:44.638744
:date: (last modification) 2021-07-11T07:37:44.638744

.. note:: Code generated by sila2codegenerator 0.3.6

________________________________________________________________________

**Copyright**:
  This file is provided "AS IS" with NO WARRANTY OF ANY KIND,
  INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

  For further Information see LICENSE file that comes with this distribution.
________________________________________________________________________
"""

__version__ = "0.1.0"

# import general packages
from sila2lib.error_handling.server_err import SiLAExecutionError

# SiLA Defined Error factories

class InitializationFailedError(SiLAExecutionError):
    """
    The initialization did not end properly.
    """

    def __init__(extra_message: str = ""):
        """

        :param extra_message: extra message, that can be added to the default message
        :returns: SiLAExecutionError
        """

        msg = f"The initialization did not end properly." \
            + f'\n{extra_message}' if extra_message else ""
        super.__init__(error_identifier="de.cetoni/pumps.syringepumps/PumpDriveControlService/v1/DefinedError/ShutdownFailed",
                       msg=msg)

