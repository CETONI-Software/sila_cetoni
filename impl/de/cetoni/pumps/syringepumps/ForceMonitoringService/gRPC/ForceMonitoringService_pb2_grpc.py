# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ForceMonitoringService_pb2 as ForceMonitoringService__pb2


class ForceMonitoringServiceStub(object):
    """Feature: Force Monitoring Service
    Functionality to control the force monitoring, read the force sensor and set a custom force limit for pump devices that
    support this functionality such as Nemesys S and Nemesys M.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClearForceSafetyStop = channel.unary_unary(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/ClearForceSafetyStop',
                request_serializer=ForceMonitoringService__pb2.ClearForceSafetyStop_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.ClearForceSafetyStop_Responses.FromString,
                )
        self.EnableForceMonitoring = channel.unary_unary(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/EnableForceMonitoring',
                request_serializer=ForceMonitoringService__pb2.EnableForceMonitoring_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.EnableForceMonitoring_Responses.FromString,
                )
        self.DisableForceMonitoring = channel.unary_unary(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/DisableForceMonitoring',
                request_serializer=ForceMonitoringService__pb2.DisableForceMonitoring_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.DisableForceMonitoring_Responses.FromString,
                )
        self.SetForceLimit = channel.unary_unary(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/SetForceLimit',
                request_serializer=ForceMonitoringService__pb2.SetForceLimit_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.SetForceLimit_Responses.FromString,
                )
        self.Subscribe_ForceSensorValue = channel.unary_stream(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceSensorValue',
                request_serializer=ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Responses.FromString,
                )
        self.Subscribe_ForceLimit = channel.unary_stream(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceLimit',
                request_serializer=ForceMonitoringService__pb2.Subscribe_ForceLimit_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.Subscribe_ForceLimit_Responses.FromString,
                )
        self.Subscribe_MaxDeviceForce = channel.unary_stream(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_MaxDeviceForce',
                request_serializer=ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Responses.FromString,
                )
        self.Subscribe_ForceMonitoringEnabled = channel.unary_stream(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceMonitoringEnabled',
                request_serializer=ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Responses.FromString,
                )
        self.Subscribe_ForceSafetyStopActive = channel.unary_stream(
                '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceSafetyStopActive',
                request_serializer=ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Parameters.SerializeToString,
                response_deserializer=ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Responses.FromString,
                )


class ForceMonitoringServiceServicer(object):
    """Feature: Force Monitoring Service
    Functionality to control the force monitoring, read the force sensor and set a custom force limit for pump devices that
    support this functionality such as Nemesys S and Nemesys M.
    """

    def ClearForceSafetyStop(self, request, context):
        """Clear Force Safety Stop
        Clear/acknowledge a force safety stop.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableForceMonitoring(self, request, context):
        """Enable Force Monitoring
        Enable the force monitoring.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableForceMonitoring(self, request, context):
        """Disable Force Monitoring
        Disable the force monitoring.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetForceLimit(self, request, context):
        """Set Force Limit
        Set a custom limit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_ForceSensorValue(self, request, context):
        """Force Sensor Value
        The currently measured force as read by the force sensor.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_ForceLimit(self, request, context):
        """Force Limit
        The current force limit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_MaxDeviceForce(self, request, context):
        """Maximum Device Force
        The maximum device force (i.e. the maximum force the pump hardware can take in continuous operation).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_ForceMonitoringEnabled(self, request, context):
        """Force Monitoring Enabled
        Whether force monitoring is enabled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe_ForceSafetyStopActive(self, request, context):
        """Force Safety Stop Active
        Whether force safety stop is active.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ForceMonitoringServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClearForceSafetyStop': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearForceSafetyStop,
                    request_deserializer=ForceMonitoringService__pb2.ClearForceSafetyStop_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.ClearForceSafetyStop_Responses.SerializeToString,
            ),
            'EnableForceMonitoring': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableForceMonitoring,
                    request_deserializer=ForceMonitoringService__pb2.EnableForceMonitoring_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.EnableForceMonitoring_Responses.SerializeToString,
            ),
            'DisableForceMonitoring': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableForceMonitoring,
                    request_deserializer=ForceMonitoringService__pb2.DisableForceMonitoring_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.DisableForceMonitoring_Responses.SerializeToString,
            ),
            'SetForceLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.SetForceLimit,
                    request_deserializer=ForceMonitoringService__pb2.SetForceLimit_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.SetForceLimit_Responses.SerializeToString,
            ),
            'Subscribe_ForceSensorValue': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_ForceSensorValue,
                    request_deserializer=ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Responses.SerializeToString,
            ),
            'Subscribe_ForceLimit': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_ForceLimit,
                    request_deserializer=ForceMonitoringService__pb2.Subscribe_ForceLimit_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.Subscribe_ForceLimit_Responses.SerializeToString,
            ),
            'Subscribe_MaxDeviceForce': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_MaxDeviceForce,
                    request_deserializer=ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Responses.SerializeToString,
            ),
            'Subscribe_ForceMonitoringEnabled': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_ForceMonitoringEnabled,
                    request_deserializer=ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Responses.SerializeToString,
            ),
            'Subscribe_ForceSafetyStopActive': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe_ForceSafetyStopActive,
                    request_deserializer=ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Parameters.FromString,
                    response_serializer=ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ForceMonitoringService(object):
    """Feature: Force Monitoring Service
    Functionality to control the force monitoring, read the force sensor and set a custom force limit for pump devices that
    support this functionality such as Nemesys S and Nemesys M.
    """

    @staticmethod
    def ClearForceSafetyStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/ClearForceSafetyStop',
            ForceMonitoringService__pb2.ClearForceSafetyStop_Parameters.SerializeToString,
            ForceMonitoringService__pb2.ClearForceSafetyStop_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableForceMonitoring(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/EnableForceMonitoring',
            ForceMonitoringService__pb2.EnableForceMonitoring_Parameters.SerializeToString,
            ForceMonitoringService__pb2.EnableForceMonitoring_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableForceMonitoring(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/DisableForceMonitoring',
            ForceMonitoringService__pb2.DisableForceMonitoring_Parameters.SerializeToString,
            ForceMonitoringService__pb2.DisableForceMonitoring_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetForceLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/SetForceLimit',
            ForceMonitoringService__pb2.SetForceLimit_Parameters.SerializeToString,
            ForceMonitoringService__pb2.SetForceLimit_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_ForceSensorValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceSensorValue',
            ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Parameters.SerializeToString,
            ForceMonitoringService__pb2.Subscribe_ForceSensorValue_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_ForceLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceLimit',
            ForceMonitoringService__pb2.Subscribe_ForceLimit_Parameters.SerializeToString,
            ForceMonitoringService__pb2.Subscribe_ForceLimit_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_MaxDeviceForce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_MaxDeviceForce',
            ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Parameters.SerializeToString,
            ForceMonitoringService__pb2.Subscribe_MaxDeviceForce_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_ForceMonitoringEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceMonitoringEnabled',
            ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Parameters.SerializeToString,
            ForceMonitoringService__pb2.Subscribe_ForceMonitoringEnabled_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe_ForceSafetyStopActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sila2.de.cetoni.pumps.syringepumps.forcemonitoringservice.v1.ForceMonitoringService/Subscribe_ForceSafetyStopActive',
            ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Parameters.SerializeToString,
            ForceMonitoringService__pb2.Subscribe_ForceSafetyStopActive_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
