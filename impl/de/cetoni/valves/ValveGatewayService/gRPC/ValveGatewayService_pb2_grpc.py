# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ValveGatewayService_pb2 as ValveGatewayService__pb2


class ValveGatewayServiceStub(object):
    """Feature: Valve Gateway Service
    Provides means to access individual valves of a valve terminal
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get_NumberOfValves = channel.unary_unary(
                '/sila2.de.cetoni.valves.valvegatewayservice.v1.ValveGatewayService/Get_NumberOfValves',
                request_serializer=ValveGatewayService__pb2.Get_NumberOfValves_Parameters.SerializeToString,
                response_deserializer=ValveGatewayService__pb2.Get_NumberOfValves_Responses.FromString,
                )
        self.Get_FCPAffectedByMetadata_ValveIndex = channel.unary_unary(
                '/sila2.de.cetoni.valves.valvegatewayservice.v1.ValveGatewayService/Get_FCPAffectedByMetadata_ValveIndex',
                request_serializer=ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Parameters.SerializeToString,
                response_deserializer=ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Responses.FromString,
                )


class ValveGatewayServiceServicer(object):
    """Feature: Valve Gateway Service
    Provides means to access individual valves of a valve terminal
    """

    def Get_NumberOfValves(self, request, context):
        """Number Of Valves
        The number of valves of a terminal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_FCPAffectedByMetadata_ValveIndex(self, request, context):
        """Valve Index
        The index of a single valve of a valve terminal. This value is 0-indexed, i.e. the first valve has index 0, the second
        one index 1 and so on.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ValveGatewayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get_NumberOfValves': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_NumberOfValves,
                    request_deserializer=ValveGatewayService__pb2.Get_NumberOfValves_Parameters.FromString,
                    response_serializer=ValveGatewayService__pb2.Get_NumberOfValves_Responses.SerializeToString,
            ),
            'Get_FCPAffectedByMetadata_ValveIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_FCPAffectedByMetadata_ValveIndex,
                    request_deserializer=ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Parameters.FromString,
                    response_serializer=ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.de.cetoni.valves.valvegatewayservice.v1.ValveGatewayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ValveGatewayService(object):
    """Feature: Valve Gateway Service
    Provides means to access individual valves of a valve terminal
    """

    @staticmethod
    def Get_NumberOfValves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.valves.valvegatewayservice.v1.ValveGatewayService/Get_NumberOfValves',
            ValveGatewayService__pb2.Get_NumberOfValves_Parameters.SerializeToString,
            ValveGatewayService__pb2.Get_NumberOfValves_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get_FCPAffectedByMetadata_ValveIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sila2.de.cetoni.valves.valvegatewayservice.v1.ValveGatewayService/Get_FCPAffectedByMetadata_ValveIndex',
            ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Parameters.SerializeToString,
            ValveGatewayService__pb2.Get_FCPAffectedByMetadata_ValveIndex_Responses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
